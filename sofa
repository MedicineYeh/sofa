#!/bin/bash
# Copyright (c) Jul. 2017, Cheng-Yueh Liu (cyliustack@gmail.com)

logdir=sofalog

C_NONE="\033[0m"
C_CYAN="\033[36m"
C_RED="\033[31m"
C_GREEN="\033[32m"
C_ORANGE="\033[33m"
C_BLUE="\033[34m"
C_PURPLE="\033[35m"
C_CYAN="\033[36m"
C_LIGHT_GRAY="\033[37m"

print_misc() {
    echo -e "${C_PURPLE} $1 ${C_NONE}"
}

print_info() {
    echo -e "${C_BLUE} $1 ${C_NONE}"
}

print_error() {
    echo -e "${C_RED} $1 ${C_NONE}"
}

print_warning() {
    echo -e "${C_ORANGE} $1 ${C_NONE}"
}



function collect_trace(){
    traced_storage=sdb
    args=$*

    if [[ "$(cat /proc/sys/kernel/kptr_restrict)" != "0" ]]; then 
        print_info "$(sysctl kernel.kptr_restrict)"
        print_error "/proc/kallsyms permission is restricted, please try the command below:"
        print_error "sudo sysctl -w kernel.kptr_restrict=0"
	exit -1
    fi
    
    if [[ "$(cat /proc/sys/kernel/perf_event_paranoid)" == "-1" ]]; then 
        mkdir -p ${logdir}
        rm -f ${logdir}/perf.data 2> /dev/null
        rm -f ${logdir}/sofa.pcap 2> /dev/null
        tcpdump -i any -v tcp -w ${logdir}/sofa.pcap & 
        date +%s > ${logdir}/sofa_time.txt
        nvprof --profile-child-processes -o ${logdir}/gputrace%p.nvp perf record -o ${logdir}/perf.data -F 99 -a -- ${args} 
        perf script -i ${logdir}/perf.data > ${logdir}/perf.script
        mv ${logdir}/gputrace*.nvp ${logdir}/gputrace.nvp 
        pkill  tcpdump
    else
        print_info "$(sysctl kernel.perf_event_paranoid)"
        print_error "PerfEvent is not avaiable, please try the command below:"
        print_error "sudo sysctl -w kernel.perf_event_paranoid=-1"
        exit -1 
    fi 
}

function sofa_stat(){
    print_info "FSA Configuration File: ${configFile}"
    perf script -i ${logdir}/perf.data > ${logdir}/perf.script
    sofastat.py ${logdir}
    logdir=${logdir}
    cp /opt/sofa/sofaboard/paracord.html ${logdir}
    cp /opt/sofa/sofaboard/index.html ${logdir}
    cp /opt/sofa/sofaboard/app.js ${logdir}
}


function sofa_report(){
    logdir=${logdir}
    cp /opt/sofa/sofaboard/paracord.html ${logdir}
    cp /opt/sofa/sofaboard/index.html ${logdir}
    cp /opt/sofa/sofaboard/app.js ${logdir}
    pushd ${logdir}; python -m SimpleHTTPServer; popd
}

function print_help()
{
    echo "sofa [--config yourconfig.cfg] [--logdir /path/to/logdir] [help|record|dist|report] command"
}

function sofa_dist(){
    print_info "SOFA-dist: Distributed Function Swarm Analyzer"
    if [ "$1" = "" ]  || [ "$2" = "" ] || [ "$3" = "" ] ; then
        echo "Usage: sofa-dist \"host1 host2 host3\" sample_period \"distributed_computing_command\""
        exit -1    
    fi 
    #pssh -PH "$1" "sleep 1 &&  echo "/tmp/perf-"\`hostname\`".data""
    pssh -PH "$1" "perf record -F 99 -a -o /tmp/perf-"\`hostname\`".data sleep $2 && perf script --ns -i /tmp/perf-"\`hostname\`".data > /tmp/perf-"\`hostname\`".script && scp /tmp/perf-"\`hostname\`".script $(hostname):${logdir}/" &
    $3
}

function main()
{
    if [[ "$*" == "" ]]; then
	print_help
	exit -1
    fi

    #args=$*
    configFile="default.cfg"
    print_info "SOFA: Function Swarm Analyzer"
    
    until [ $# -eq 0 ]
    do
        case "$1" in
            "help" )
                print_help
                exit 0
                ;;
	    "--help" )
                print_help
                exit 0
                ;;
            "-h" )
                print_help
                exit 0
                ;;
            "stat" )
                sofa_stat
                exit 0 
                ;;
            "report" )
                sofa_stat
                sofa_report
                exit 0 
                ;;
            "dist" )
                shift
                sofa_dist $* 
                exit 0 
                ;;
            "--logdir" )
                shift
                logdir=$1
                ;;
            "--config" )
                shift
                configFile=$1
                ;;
            "record" )
                shift
		print_info "Traced Command: $*"
		if [[ "$*" == "" ]]; then
			print_help
			exit -1
		else
                	collect_trace $*
                	exit 0
		fi
		;;
            *)
                print_help
                exit 0
                ;;
        esac
        shift
    done
}

##### Main() ##### 
main $*
